# 工作流名称：更新 files.json 并部署到 GitHub Pages
name: Update files.json and Deploy to GitHub Pages

# 定义触发条件
on:
  push:  # 当代码推送到 main 分支时触发
    branches:
      - main
  schedule:  # 定时任务：每 4 小时触发一次
    - cron: '0 */4 * * *'
  workflow_dispatch:  # 手动触发

# 定义具体任务
jobs:
  build:
    # 指定运行环境为 Ubuntu 最新版本
    runs-on: ubuntu-latest

    # 工作流的执行步骤
    steps:
    # Step 1: 检出代码
    - name: Checkout repository
      uses: actions/checkout@v3
      # 说明：从 GitHub 仓库拉取代码到虚拟机环境

    # Step 2: 设置 Python 环境
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # 指定使用 Python 3.9
      # 说明：安装 Python 环境，为后续运行脚本做准备

    # Step 3: 运行 Python 脚本生成 files.json
    - name: Generate files.json
      run: |
        echo "Running Python script to generate files.json"
        python docs/generate_json.py
      # 说明：执行 docs/generate_json.py 脚本，生成或更新 docs/files.json

    # Step 4: 禁用 Jekyll
    - name: Disable Jekyll
      run: |
        touch docs/.nojekyll
        echo "Jekyll disabled by creating .nojekyll file"
      # 说明：创建一个 .nojekyll 文件，避免 GitHub Pages 的 Jekyll 处理干扰

    # Step 5: 提交并推送更改
    - name: Commit and push changes
      env:
        PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # 使用 GitHub Secret 存储的 PAT
      run: |
        echo "Configuring git user"
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        echo "Staging changes"
        git add docs/files.json docs/.nojekyll
        echo "Committing changes"
        git commit -m "Update files.json via GitHub Actions"
        echo "Pushing changes to main branch"
        git push https://${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/Qianban2027/Study.git HEAD:main
      # 说明：
      # - 配置 Git 用户信息
      # - 提交 docs/files.json 和 docs/.nojekyll 文件到 main 分支
      # - 使用 PAT 确保拥有写权限

    # Step 6: 部署到 GitHub Pages
    - name: Deploy GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}  # 使用内置的 GITHUB_TOKEN 进行部署
        publish_dir: ./docs
      # 说明：
      # - 使用 peaceiris 的 GitHub Pages 部署工具
      # - 将 docs 文件夹内容发布到 GitHub Pages
